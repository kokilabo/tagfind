name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/create-gh-release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            extension: .exe

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare asset
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          asset_name=tagfind-${{ matrix.target }}${{ matrix.extension || '' }}
          mv tagfind${{ matrix.extension || '' }} $asset_name
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            7z a ../../$asset_name.zip $asset_name
          else
            tar czf ../../$asset_name.tar.gz $asset_name
          fi
          cd ../../..

      - name: Upload asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: target/tagfind-${{ matrix.target }}${{ matrix.extension == '.exe' && '.zip' || '.tar.gz' }}
          asset_name: tagfind-${{ matrix.target }}${{ matrix.extension == '.exe' && '.zip' || '.tar.gz' }}
          asset_content_type: ${{ matrix.extension == '.exe' && 'application/zip' || 'application/gzip' }}